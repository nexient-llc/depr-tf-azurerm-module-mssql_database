/**
* # Terradocs
* Below are the details that are generated by Terradocs plugin. It contains information about the module, inputs, outputs etc.
*
*
*/

# Copyright 2022 Nexient LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

resource "azurerm_mssql_database" "database" {
  name         = var.database_name
  server_id    = var.sql_server_id
  license_type = var.license_type
  #auto_pause_delay_in_minutes = var.auto_pause_delay_in_minutes
  elastic_pool_id = var.elastic_pool_id
  #geo_backup_enabled          = var.geo_backup_enabled
  ledger_enabled = var.ledger_enabled

  max_size_gb                 = var.max_size_gb
  create_mode                 = var.create_mode
  restore_point_in_time       = var.restore_point_in_time
  restore_dropped_database_id = var.restore_dropped_database_id
  recover_database_id         = var.recover_database_id
  creation_source_database_id = var.creation_source_database_id
  sku_name                    = var.sku_name
  storage_account_type        = var.storage_account_type
  zone_redundant              = var.zone_redundant

  short_term_retention_policy {
    retention_days           = var.short_term_retention_policy.retention_days
    backup_interval_in_hours = var.short_term_retention_policy.backup_interval_in_hours
  }

  dynamic "long_term_retention_policy" {
    for_each = var.long_term_retention_enabled ? [1] : []
    content {
      weekly_retention  = lookup(var.long_term_retention_policy, "weekly_retention", "P4W")  # 4 weeks
      monthly_retention = lookup(var.long_term_retention_policy, "monthly_retention", "P2M") # 2 months
      yearly_retention  = lookup(var.long_term_retention_policy, "yearly_retention", "P2Y")  # 2 years
      week_of_year      = lookup(var.long_term_retention_policy, "week_of_year", 1)          # 1st week of the year
    }
  }

  tags = local.tags
}

resource "azurerm_mssql_database_extended_auditing_policy" "db_auditing_policy" {
  count = var.extended_db_auditing_enabled ? 1 : 0

  database_id                             = azurerm_mssql_database.database.id
  retention_in_days                       = var.retention_in_days
  storage_account_access_key              = var.storage_account_access_key
  storage_account_access_key_is_secondary = var.is_access_key_secondary
  storage_endpoint                        = var.storage_endpoint
}
